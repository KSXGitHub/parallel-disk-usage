name: Test

on:
  - push
  - pull_request

jobs:
  test:
    name: Test

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          # - ubuntu-latest
          - windows-latest
          # - macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        timeout-minutes: 1
        continue-on-error: true
        if: matrix.os != 'macos-latest' # Cache causes errors on macOS
        with:
          path: |
            ~/.cargo
            target
          key: ${{ github.job }}-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ github.job }}-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-${{ hashFiles('**/Cargo.lock') }}
            ${{ github.job }}-${{ runner.os }}-${{ hashFiles('rust-toolchain') }}-

      - name: Install Rust
        shell: bash
        run: |
          installer=$(mktemp -d)/install-rustup
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > $installer
          bash $installer --default-toolchain $(cat rust-toolchain) -y

      # - name: Test (dev)
      #   shell: bash
      #   env:
      #     FMT: 'false'
      #     LINT: 'false'
      #     DOC: 'true'
      #     BUILD: 'true'
      #     TEST: 'true'
      #     BUILD_FLAGS: '--locked'
      #     TEST_FLAGS: '--no-fail-fast'
      #   run: ./test.sh

      - name: Simple test
        shell: bash
        run: cargo test --no-default-features

      - name: Inspect directories
        shell: bash
        run: |
          echo HOME IS $HOME
          ls -lA $HOME
          echo
          echo

          echo CARGO $HOME/.cargo
          ls -lA $HOME/.cargo
          echo
          echo REGISTRY
          ls -lA $HOME/.cargo/registry
          echo
          echo

          echo TARGET
          ls -lA target
          ls -lA target/debug

      # - name: Test (release)
      #   shell: bash
      #   env:
      #     RUSTFLAGS: '-D warnings'
      #     RUSTDOCFLAGS: '-D warnings'
      #     FMT: 'false'
      #     LINT: 'false'
      #     DOC: 'true'
      #     BUILD: 'true'
      #     TEST: 'true'
      #     BUILD_FLAGS: '--locked'
      #     TEST_FLAGS: '--no-fail-fast'
      #   run: ./test.sh --release
